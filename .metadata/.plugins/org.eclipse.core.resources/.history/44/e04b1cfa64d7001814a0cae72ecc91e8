<?php
namespace Franck\EcommerceBundle\DataFixtures\ORM;

use Doctrine\Common\DataFixtures\AbstractFixture;
use Doctrine\Common\DataFixtures\OrderedFixtureInterface;
use Doctrine\Common\Persistence\ObjectManager;
use Franck\EcommerceBundle\Entity\UserAddress;

class LoadAdressData extends AbstractFixture implements OrderedFixtureInterface
{
    public function load(ObjectManager $manager)
    {
        $address1=new UserAddress();
        $address1->setAlias('Ville');
        $address1->setFirstname('Franck');
        $address1->setName('R');
        $address1->setAddress1('Grésillons');
        $address1->setAddress2('');
        $address1->setZipcode('92600');
        $address1->setCity('Asnières');
        $address1->setCountry('France');
        $address1->setExtra('code porte: xxxxxx');
        $address1->setPhone('0102030405');
        $address1->setUser($this->getReference('user1'));
        $manager->persist($address1);
        
        $address2=new UserAddress();
        $address2->setAlias('Campagne');
        $address2->setFirstname('Franck');
        $address2->setName('R');
        $address2->setAddress1('Forêt');
        $address2->setAddress2('à coté');
        $address2->setZipcode('27000');
        $address2->setCity('Bla');
        $address2->setCountry('France');
        $address2->setExtra('');
        $address2->setPhone('+33605040302');
        $address2->setUser($this->getReference('user1'));
        $manager->persist($address2);
        
        
        
        
/*        $address=new UserAddress();
        $address->setAlias('Blabla');
        $address->setFirstname('');
        $address->setName('');
        $address->setAddress1('');
        $address->setAddress2('');
        $address->setZipcode('');
        $address->setCity('Paris');
        $address->setCountry('France');
        $address->setExtra('code porte: xxxxxx');
        $address->setPhone('0102030405');
        $address->setUser($this->getReference('user1'));
        $manager->persist($address);*/
        
        $manager->flush();
        
        $this->addReference('address1', $address1);
        $this->addReference('address2', $address2);
    }
    
    public function getOrder()
    {
        return 4;
    }
}